#############################################################################
##   Copyright (C) 2001 by Rick L. Vinyard, Jr.                            ##
##   rvinyard@cs.nmsu.edu                                                  ##
##                                                                         ##
##   This program is free software; you can redistribute it and/or modify  ##
##   it under the terms of the GNU General Public License as               ##
##   published by the Free Software Foundation version 2.                  ##
##                                                                         ##
##   This program is distributed in the hope that it will be useful,       ##
##   but WITHOUT ANY WARRANTY; without even the implied warranty of        ##
##   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         ##
##   GNU General Public License for more details.                          ##
##                                                                         ##
##   You should have received a copy of the GNU General Public             ##
##   License along with this library; if not, write to the                 ##
##   Free Software Foundation, Inc.,                                       ##
##   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA              ##
#############################################################################

#########################################################################
#  package specific values
#########################################################################
pushdef([PACKAGE_MAJOR_VERSION], [0])
pushdef([PACKAGE_MINOR_VERSION], [0])
pushdef([PACKAGE_MICRO_VERSION], [7])
pushdef([PKG_VERSION], PACKAGE_MAJOR_VERSION.PACKAGE_MINOR_VERSION.PACKAGE_MICRO_VERSION)

AC_INIT([clipsmm], PKG_VERSION, [rvinyard@cs.nmsu.edu])

[PACKAGE_MAJOR_VERSION]=PACKAGE_MAJOR_VERSION
[PACKAGE_MINOR_VERSION]=PACKAGE_MINOR_VERSION
[PACKAGE_MICRO_VERSION]=PACKAGE_MICRO_VERSION

popdef([PACKAGE_MAJOR_VERSION])
popdef([PACKAGE_MINOR_VERSION])
popdef([PACKAGE_MICRO_VERSION])
popdef([PKG_VERSION])

#
# +1 :  ? : +1 == new interface that does not break old one
# +1 :  ? :  0 == new interface that breaks old one
#  ? :  ? :  0 == no new interfaces, but breaks apps
#  ? : +1 :  ? == just some internal changes, nothing breaks but might work better
# CURRENT : REVISION : AGE
LIBTOOL_SO_VERSION=0:0:0
AC_SUBST(LIBTOOL_SO_VERSION)

PACKAGE_SUMMARY="Clipsmm is a C++ wrapper for the CLIPS C library"
PACKAGE_LICENSE="GPL"
PACKAGE_URL="http://clipsmm.sourceforge.net"
PACKAGE_DOWNLOAD="http://download.sourceforge.net/clipsmm/"
PACKAGE_WWWHOST="shell.sourceforge.net:/home/groups/c/cl/clipsmm/htdocs/"
PACKAGE_RELEASEHOST="ftp://upload.sourceforge.net/incoming/"

PKGCONFIG_REQUIRES="clips-6 >= 6.24.0 glibmm-2.4 >= 2.6.0 gthread-2.0 >= 2.6.0"
PKGCONFIG_VERSION="1.0"

RPM_RELEASE="1"

FEDORA_6_LIB_GROUP="System Environment/Libraries"
FEDORA_6_DEVEL_GROUP="Development/Libraries"
FEDORA_6_BUILD_REQUIRES="clips-devel >= 6.24 glibmm24-devel >= 2.6.0 cppunit-devel >= 1.11 pkgconfig m4"
FEDORA_6_DEVEL_REQUIRES="clips-devel >= 6.24 glibmm24-devel >= 2.6.0 pkgconfig"

FEDORA_5_LIB_GROUP="System Environment/Libraries"
FEDORA_5_DEVEL_GROUP="Development/Libraries"
FEDORA_5_BUILD_REQUIRES="clips-devel >= 6.24 glibmm24-devel >= 2.6.0 cppunit-devel >= 1.11 pkgconfig m4"
FEDORA_5_DEVEL_REQUIRES="clips-devel >= 6.24 glibmm24-devel >= 2.6.0 pkgconfig"

DOXYGEN_INPUT="clipsmm"
DOXYGEN_EXAMPLE_PATH="examples"
DOXYGEN_EXAMPLE_PATTERNS="*.h *.cpp"
DOXYGEN_IMAGE_PATH="docs/images"
DOXYGEN_HTML_HEADER="docs/doxygen_header.html"
DOXYGEN_HTML_FOOTER="docs/doxygen_footer.html"
DOXYGEN_HTML_STYLESHEET="docs/doxygen.css"

#########################################################################
# Doxygen
#########################################################################
DX_DOXYGEN_FEATURE(OFF)
DX_HTML_FEATURE(ON)
DX_CHM_FEATURE(OFF)
DX_CHI_FEATURE(OFF)
DX_MAN_FEATURE(OFF)
DX_RTF_FEATURE(OFF)
DX_XML_FEATURE(OFF)
DX_PDF_FEATURE(OFF)
DX_PS_FEATURE(OFF)
DX_INIT_DOXYGEN($PACKAGE_NAME, Doxyfile, docs/www/reference)

#########################################################################
#  don't touch this
#########################################################################
PACKAGE_RELEASE=$PACKAGE_MAJOR_VERSION.$PACKAGE_MINOR_VERSION
AC_SUBST(PACKAGE_RELEASE)
AC_SUBST(PKGCONFIG_VERSION)

AC_SUBST(LIBTOOL_SO_VERSION)

AC_SUBST(PACKAGE_SUMMARY)
AC_SUBST(PACKAGE_LICENSE)
AC_SUBST(PACKAGE_URL)
AC_SUBST(PACKAGE_DOWNLOAD)
AC_SUBST(PACKAGE_WWWHOST)
AC_SUBST(PACKAGE_RELEASEHOST)

AC_DEFINE_UNQUOTED(PACKAGE_MAJOR_VERSION, $PACKAGE_MAJOR_VERSION, [Major version])
AC_DEFINE_UNQUOTED(PACKAGE_MINOR_VERSION, $PACKAGE_MINOR_VERSION, [Minor version])
AC_DEFINE_UNQUOTED(PACKAGE_MICRO_VERSION, $PACKAGE_MICRO_VERSION, [Micro version])
AC_SUBST(PACKAGE_MAJOR_VERSION)
AC_SUBST(PACKAGE_MINOR_VERSION)
AC_SUBST(PACKAGE_MICRO_VERSION)

AC_SUBST(PKGCONFIG_REQUIRES)

AC_SUBST(RPM_RELEASE)

AC_SUBST(FEDORA_6_LIB_GROUP)
AC_SUBST(FEDORA_6_DEVEL_GROUP)
AC_SUBST(FEDORA_6_BUILD_REQUIRES)
AC_SUBST(FEDORA_6_DEVEL_REQUIRES)

AC_SUBST(FEDORA_5_LIB_GROUP)
AC_SUBST(FEDORA_5_DEVEL_GROUP)
AC_SUBST(FEDORA_5_BUILD_REQUIRES)
AC_SUBST(FEDORA_5_DEVEL_REQUIRES)

AC_SUBST(DOXYGEN_INPUT)
AC_SUBST(DOXYGEN_EXAMPLE_PATH)
AC_SUBST(DOXYGEN_EXAMPLE_PATTERNS)
AC_SUBST(DOXYGEN_IMAGE_PATH)
AC_SUBST(DOXYGEN_HTML_HEADER)
AC_SUBST(DOXYGEN_HTML_FOOTER)
AC_SUBST(DOXYGEN_HTML_STYLESHEET)

AM_INIT_AUTOMAKE([1.9 tar-ustar dist-bzip2 dist-zip])
AM_CONFIG_HEADER([config.h])
AX_PREFIX_CONFIG_H([$PACKAGE/$PACKAGE-config.h],[CLIPSMM],[config.h])

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_INSTALL

for top_builddir in . .. ../.. $ac_auxdir $ac_auxdir/..; do
test -f $top_builddir/configure && break
done
AC_PROG_LIBTOOL


#########################################################################
#  Option to build (or not) unit tests
#########################################################################
AC_ARG_ENABLE(
  [unit-tests],
  AS_HELP_STRING([--disable-unit-tests], [Disable build of unit tests (requires cppunit to build)]),
  [unit_tests=false],
  [unit_tests=true]
)
AM_CONDITIONAL([BUILD_UNIT_TESTS], [test "x$unit_tests" = xtrue])

#########################################################################
#  header check utility macros
#########################################################################
AC_DEFUN([AC_REQUIRE_HEADERS],[AC_CHECK_HEADERS($1,,AC_MSG_ERROR(Header $1 not found))])
AC_DEFUN([AC_REQUIRE_LIB],[AC_CHECK_LIB($1,$2,,AC_MSG_ERROR(Library $1 not found))])

#########################################################################
#  Look for smart pointers in either tr1 or boost
#########################################################################
AC_DEFUN(
  [CHECK_FOR_BOOST_SMART_POINTER],
  [ AC_CHECK_HEADER( [boost/shared_ptr.hpp],
                     [AC_DEFINE(USE_BOOST_SMART_POINTER,[],[If defined, boost library smart pointers will be used])
                     ],
                     [AC_MSG_ERROR(Header boost/shared_ptr.hpp not found)]
                   )
  ]
)

AC_DEFUN(
  [CHECK_FOR_TR1_SMART_POINTER],
  [ AC_CHECK_HEADER( [tr1/boost_shared_ptr.h],
                     [AC_DEFINE(USE_TR1_SMART_POINTER,[],[If defined TR1 smart pointers will be used])
                     ],
                     [ AC_MSG_CHECKING([for boost library smart pointers since tr1 smart pointers were not found])
                       CHECK_FOR_BOOST_SMART_POINTER()
                     ],
                     [
                       #include <typeinfo>
                       #include <memory>
                       #include <functional>
                       #include <bits/concurrence.h>
                       #include <ext/mt_allocator.h>
                     ]
                   )
  ]
)

AC_CHECK_HEADER(
  [bits/concurrence.h],
  [ AC_CHECK_HEADER(
      [ext/mt_allocator.h],
      [ CHECK_FOR_TR1_SMART_POINTER() ],
      [ AC_MSG_CHECKING([for boost library smart pointers since tr1 smart pointers were not found])
        CHECK_FOR_BOOST_SMART_POINTER()
      ]
    )
  ],
  [ AC_MSG_CHECKING([for boost library smart pointers since tr1 smart pointers were not found])
    CHECK_FOR_BOOST_SMART_POINTER()
  ]
)

#########################################################################
#  pkgconfig package requirements
#########################################################################
PKG_CHECK_MODULES(PROJECT, $PKGCONFIG_REQUIRES)
AC_SUBST(PROJECT_LIBS)
AC_SUBST(PROJECT_CFLAGS)

#########################################################################
#  build spec.in files
#########################################################################
for distro in "fedora-6 FEDORA 6" "fedora-5 FEDORA 5"; do
  original_params=("$@")
  set -- $distro
  m4 -D DISTRO=${2} \
     -D DISTRO_LIB_GROUP="${2}_${3}_LIB_GROUP" \
     -D DISTRO_BUILD_REQUIRES="${2}_${3}_BUILD_REQUIRES" \
     -D DISTRO_DEVEL_GROUP="${2}_${3}_DEVEL_GROUP" \
     -D DISTRO_DEVEL_REQUIRES="${2}_${3}_DEVEL_REQUIRES" \
     spec.m4 >${1}/${PACKAGE_NAME}.spec.in
  set -- $original_params
done

AC_OUTPUT(fedora-6/clipsmm.spec fedora-5/clipsmm.spec clipsmm-1.0.pc docs/www/site.php Makefile clipsmm/Makefile examples/Makefile examples/environment/Makefile examples/facts/Makefile unit_tests/Makefile)
